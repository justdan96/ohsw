name: Build for Windows 64-bit

on:
  push:
    branches: [master]

jobs:
  check:
    runs-on: ubuntu-latest
    
    outputs:
      status: ${{ steps.check.outputs.status }}
      upload_url: ${{ steps.create.outputs.upload_url }}

    steps:
    - name: create-release
      id: create
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: nightly-${{ github.sha }}
        release_name: Nightly build ${{ github.sha }}
        prerelease: true
        commitish: ${{ github.sha }}

  build:
    needs: check
    if: needs.check.outputs.status == 0
    
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v2
      name: checkout
    
    - name: setup-go
      uses: actions/setup-go@v2
      with:
        go-version: '^1.13'
      
    - name: setup-bin-folder
      run: mkdir bin
      
    - name: setup-deps
      run: |
        go get github.com/kardianos/service
        go get github.com/mitchellh/go-ps
      
    - name: build-for-windows
      run: |
        go build
        dir ohsw.exe
      env:
        GOOS: windows
        GOARCH: amd64
        
    - name: copy-to-bin-folder
      run: copy ohsw.exe bin
      
    - name: Upload Windows Build
      id: upload-win
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.check.outputs.upload_url }}
        asset_path: bin/ohsw.exe
        asset_name: ohsw.exe
        asset_content_type: application/octet-stream
